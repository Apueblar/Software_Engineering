#BlueJ class context
comment0.target=MatrixTest
comment0.text=\r\n\ The\ test\ class\ MatrixTest.\r\n\r\n\ @author\ \ (your\ name)\r\n\ @version\ (a\ version\ number\ or\ a\ date)\r\n
comment1.params=
comment1.target=MatrixTest()
comment1.text=\r\n\ Default\ constructor\ for\ test\ class\ MatrixTest\r\n
comment10.params=
comment10.target=void\ addMatrixTest()
comment10.text=\r\n\ Test\ for\ the\ method\:\ addRows()\r\n\ \r\n\ -->\ Case\ 1\:\ Correct\ Sum\ Matrix\r\n
comment11.params=expected\ actual
comment11.target=void\ assertMatrixEquals(int[][],\ int[][])
comment11.text=\r\n\ Checks\ if\ 2\ matrices\ have\ the\ same\ numbers.\r\n
comment12.params=
comment12.target=void\ swapColumnsTest()
comment12.text=\r\n\ Test\ for\ the\ method\:\ swapColumns()\r\n\ \r\n\ -->\ Case\ 1\:\ Correct\ swap\ of\ Columns\r\n
comment13.params=
comment13.target=void\ horizontalReverseTest()
comment13.text=\r\n\ Test\ for\ the\ method\:\ horizontalReverse()\r\n\ \r\n\ -->\ Case\ 1\:\ Correct\ horizontal\ row\ reverse\r\n
comment14.params=
comment14.target=void\ smoothMatrixTest()
comment14.text=\r\n\ Test\ for\ the\ method\:\ smoothMatrix()\r\n\ \r\n\ -->\ Case\ 1\:\ Correct\ smooth\ Matrix\r\n
comment2.params=
comment2.target=void\ setUp()
comment2.text=\r\n\ Sets\ up\ the\ test\ fixture.\r\n\r\n\ Called\ before\ every\ test\ case\ method.\r\n
comment3.params=
comment3.target=void\ tearDown()
comment3.text=\r\n\ Tears\ down\ the\ test\ fixture.\r\n\r\n\ Called\ after\ every\ test\ case\ method.\r\n
comment4.params=
comment4.target=void\ correctMatrixTest()
comment4.text=\r\n\ Test\ for\ the\ constructor\:\ Matrix(int[][]\ matrix)\r\n\ \r\n\ -->\ Case\ 1\:\ Correct\ Matrix\r\n\ Case\ 2\:\ Null\ Matrix\r\n\ Case\ 3\:\ 0\ length\ matrix\r\n\ Case\ 4\:\ Different\ length\ columns\ and\ rows\r\n\ Case\ 5\:\ Length\ Greater\ than\ 20\r\n
comment5.params=
comment5.target=void\ nullMatrixTest()
comment5.text=\r\n\ Test\ for\ the\ constructor\:\ Matrix(int[][]\ matrix)\r\n\ \r\n\ Case\ 1\:\ Correct\ Matrix\r\n\ -->\ Case\ 2\:\ Null\ Matrix\r\n\ Case\ 3\:\ 0\ length\ matrix\r\n\ Case\ 4\:\ Different\ length\ columns\ and\ rows\r\n\ Case\ 5\:\ Length\ Greater\ than\ 20\r\n
comment6.params=
comment6.target=void\ length0MatrixTest()
comment6.text=\r\n\ Test\ for\ the\ constructor\:\ Matrix(int[][]\ matrix)\r\n\ \r\n\ Case\ 1\:\ Correct\ Matrix\r\n\ Case\ 2\:\ Null\ Matrix\r\n\ -->\ Case\ 3\:\ 0\ length\ matrix\r\n\ Case\ 4\:\ Different\ length\ columns\ and\ rows\r\n\ Case\ 5\:\ Length\ Greater\ than\ 20\r\n
comment7.params=
comment7.target=void\ notSquareMatrixTest()
comment7.text=\r\n\ Test\ for\ the\ constructor\:\ Matrix(int[][]\ matrix)\r\n\ \r\n\ Case\ 1\:\ Correct\ Matrix\r\n\ Case\ 2\:\ Null\ Matrix\r\n\ Case\ 3\:\ 0\ length\ matrix\r\n\ -->\ Case\ 4\:\ Different\ length\ columns\ and\ rows\r\n\ Case\ 5\:\ Length\ Greater\ than\ 20\r\n
comment8.params=
comment8.target=void\ length21AndMoreMatrixTest()
comment8.text=\r\n\ Test\ for\ the\ constructor\:\ Matrix(int[][]\ matrix)\r\n\ \r\n\ Case\ 1\:\ Correct\ Matrix\r\n\ Case\ 2\:\ Null\ Matrix\r\n\ Case\ 3\:\ 0\ length\ matrix\r\n\ Case\ 4\:\ Different\ length\ columns\ and\ rows\r\n\ -->\ Case\ 5\:\ Length\ Greater\ than\ 20\r\n
comment9.params=
comment9.target=void\ flattenedMatrixTest()
comment9.text=\r\n\ Test\ for\ the\ method\:\ flattenMatrix()\r\n\ \r\n\ -->\ Case\ 1\:\ Correct\ Flattened\ Matrix\r\n
numComments=15
